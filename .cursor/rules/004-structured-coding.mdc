---
description: "Structured Code Organization and Quality Standards"
globs: "**/*"
tags: [development, quality, structure]
priority: 1
version: 2.0.0
rule_type: "always"
enforcement: "strict"
---

## Always Enforcement
1. Code Structure:
   - Automatic organization
   - Style enforcement
   - Pattern validation
   - Quality checks
   - Performance analysis

2. Quality Controls:
   - Continuous validation
   - Standard enforcement
   - Security scanning
   - Performance monitoring
   - Resource tracking

3. Enforcement Actions:
   - Automatic formatting
   - Code optimization
   - Security hardening
   - Performance tuning
   - Resource management

## Code Organization
1. Structure Rules:
   - Consistent file layout
   - Naming conventions
   - Modular design
   - Clean architecture
   - Dependency tracking

2. Analysis Standards:
   - Static analysis
   - Security scanning
   - Performance profiling
   - Type validation
   - Linting rules

3. Quality Requirements:
   - Test coverage
   - Security compliance
   - Performance metrics
   - Documentation quality
   - Code review standards

## Automation Features
1. Code Management:
   - Automated testing
   - CI/CD integration
   - Quality validation
   - Documentation gen
   - Dependency updates

2. Monitoring System:
   - Performance tracking
   - Error monitoring
   - Usage analytics
   - Security alerts
   - Technical debt

3. Integration Tools:
   - Version control
   - Review process
   - Deployment flow
   - Monitoring setup
   - Alert system