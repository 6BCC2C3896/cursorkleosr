---
description: "Standards and Best Practices for Component Creation"
globs: "**/components/*.{js,jsx,ts,tsx}"
tags: [task, development, components, frontend]
priority: 2
version: 1.0.0
---
# Component Creation

Guidelines for creating modular, reusable frontend components.

## Prerequisites
- Node.js and npm/yarn
- React/TypeScript knowledge
- Project structure familiarity
- Design specifications (if applicable)

## Process

1. **Planning**
   - Define component purpose and functionality
   - Identify props and state requirements
   - Determine component boundaries
   - Decide between presentational vs. container pattern

2. **Structure**
   ```
   components/
   └── MyComponent/
       ├── index.ts              # Export file
       ├── MyComponent.tsx       # Main component
       ├── MyComponent.test.tsx  # Tests
       └── styles.ts             # Styling
   ```

3. **Implementation**
   - Create TypeScript interfaces for props
   - Implement component with proper typing
   - Add default exports in index.ts
   - Write unit tests
   - Document with JSDoc comments

## Validation
- Component renders without errors
- Tests pass
- TypeScript compile succeeds
- Matches design specifications
- No console errors or warnings

## Examples

**Simple Component**:
```typescript
// Button.tsx
interface ButtonProps {
  label: string;
  onClick: () => void;
  variant?: 'primary' | 'secondary';
}

const Button: React.FC<ButtonProps> = ({
  label,
  onClick,
  variant = 'primary'
}) => (
  <button 
    className={`btn btn-${variant}`}
    onClick={onClick}
  >
    {label}
  </button>
);
```

## Best Practices
- Use functional components with hooks
- Keep components focused on single responsibility
- Extract complex logic to custom hooks
- Use TypeScript interfaces for all props
- Provide default values for optional props
- Follow project's naming conventions
- Test components in isolation

## Related Tasks
- [Component Testing](mdc:.cursor/rules/tasks/testing-component-tests.mdc)
- [Component Styling](mdc:.cursor/rules/tasks/development-component-styling.mdc)